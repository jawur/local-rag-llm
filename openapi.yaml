openapi: 3.0.3
info:
  title: RAG Application API
  description: |
    API for a Retrieval-Augmented Generation (RAG) application that provides question answering capabilities
    based on a local document knowledge base.
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local development server
paths:
  /api/query:
    post:
      summary: Query the RAG system
      description: |
        Send a question to the RAG system to get an answer based on the knowledge base.
        The system uses a local LLM and vector store to provide accurate responses.
      operationId: queryRag
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - question
              properties:
                question:
                  type: string
                  description: The question to ask the RAG system
                  example: "What is RAG?"
      responses:
        '200':
          description: Successful response with answer
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      question:
                        type: string
                        description: The original question that was asked
                      answer:
                        type: string
                        description: The answer generated by the RAG system
                required:
                  - data
        '400':
          description: Bad request - missing question field
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing 'question' field in request body"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message describing what went wrong
components:
  schemas: {}